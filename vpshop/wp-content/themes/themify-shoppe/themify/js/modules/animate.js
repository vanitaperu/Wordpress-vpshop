(t=>{"use strict";let i=!1;const a=function(){if(!1===i){i=!0;const t=this.style,a=t.animationName,n=this.dataset.tfAnimation_hover;a&&(t.animationIterationCount=t.animationDelay=t.animationName="",this.classList.remove(a)),this.tfOn("animationend",(function(t){this.classList.remove("animated","tb_hover_animate",t.animationName),this.style.animationName=this.style.willChange="",i=!1}),{passive:!0,once:!0}),t.animationName=n,this.classList.add("animated","tb_hover_animate",n)}},n=i=>{t.imagesLoad(i).then((t=>{if(t.style.visibility="visible",t.hasAttribute("data-tf-animation")){t.hasAttribute("data-tf-animation_repeat")&&(t.style.animationIterationCount=t.dataset.tfAnimation_repeat),t.hasAttribute("data-tf-animation_delay")&&(t.style.animationDelay=t.dataset.tfAnimation_delay+"s");const i=t.dataset.tfAnimation;t.classList.add(i),t.style.animationName=i,t.tfOn("animationend",(function(){this.style.animationIterationCount=this.style.animationDelay=this.style.willChange="",this.classList.remove("animated",i),this.removeAttribute("data-tf-animation")}),{passive:!0,once:!0}).classList.add("animated")}t.classList.contains("hover-wow")&&(t=>{const i=["pointerenter","tf_custom_animate"];t.tfOff(i,a,{passive:!0}).tfOn(i,a,{passive:!0})})(t)}))},e=new IntersectionObserver(((t,i)=>{for(let a=t.length-1;a>-1;--a)!0===t[a].isIntersecting&&t[a].intersectionRatio>.001&&(i.unobserve(t[a].target),n(t[a].target))}),{threshold:[0,.5,1]});t.on("tf_wow_init",(i=>{t.animateCss().then((()=>{for(let t=i.length-1;t>-1;--t)i[t].style.willChange="transform,opacity",e.observe(i[t])}))}))})(Themify);